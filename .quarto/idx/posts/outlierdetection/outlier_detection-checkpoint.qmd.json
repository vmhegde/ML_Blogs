{"title":"Outlier Detection on Annual Rainfall in Coastal Karnataka","markdown":{"yaml":{"title":"Outlier Detection on Annual Rainfall in Coastal Karnataka","jupyter":"python3"},"headingText":"Plotting the earthquake data correlating earthquake depth to earthquake magnitude","containsRefs":false,"markdown":"\n\nWe use the Shapiro-Wilk test and Isolation Forest to detect outliers in the rainfall data.\n\n```{python}\n#| tags: []\nimport sys\n\nassert sys.version_info >= (3, 7)\n```\n\n```{python}\n#| tags: []\nfrom packaging import version\nimport sklearn\n\nassert version.parse(sklearn.__version__) >= version.parse(\"1.0.1\")\n```\n\n```{python}\n#| tags: []\nimport pandas as pd\n\ndf = pd.read_csv(\"./coastal_karnataka_rainfall-checkpoint.csv\")\n\ndf.keys()\n```\n\n\n```{python}\n#| tags: []\nimport matplotlib.pyplot as plt\n\nplt.rc('font', size=14)\nplt.rc('axes', labelsize=14, titlesize=14)\nplt.rc('legend', fontsize=14)\nplt.rc('xtick', labelsize=10)\nplt.rc('ytick', labelsize=10)\nplt.figure(figsize=(10, 4))\n\nX = df['YEAR']\nX.drop(columns=['YEAR'])\ny = df['ANNUAL']\nplt.scatter(X, y, marker='*')\nplt.xlabel(\"$year$\")\nplt.ylabel(\"$rainfall$\", rotation=90)\n#plt.axis([90, 160, 60, 75])\nplt.grid()\nplt.show()\n```\n\n## Detecting Outliers by Normalizing the Data\n\nThe Shapiro-Wilk test can be used to check if data is normally distributed. If the data is normally distributed, we can use the mean and standard deviation to detect outliers.\n\n```{python}\n#| tags: []\nimport scipy\nimport numpy as np\narr = df.ANNUAL.to_numpy()\narr = arr[~np.isnan(arr)]\nscipy.stats.shapiro(arr)\n# small p-value --> data is normal\n```\n\nBecause the p-value is very small, we can deduce that the data is normally distributed. Thus, we can say that outliers lie 3.5 standard deviations above and below the mean of the distribution.\n\n## Plotting the Kernel Denstiy Estimation\n\nThe Kernel Density Estimation of the data helps us visualize the shape of the data in a smooth curve.\n\n```{python}\n#| tags: []\nplt = df.ANNUAL.plot.kde()\nmean = df.ANNUAL.mean()\nstd = df.ANNUAL.std()\n\n# marking outliers\nplt.vlines(x = std*3.5 + mean, ymin = -0.00005, ymax = 0.0008,\n           colors = 'orange',\n           label = 'vline_multiple - full height')\nplt.vlines(x = mean - std*3.5, ymin = -0.00005, ymax = 0.0008,\n           colors = 'orange',\n           label = 'vline_multiple - full height')\n```\n\n## Detecting Outliers using Isolation Forest\n\nThe Isolation Forest algorithm isolates anomalies by randomly selecting a feature and then randomly selecting a split value between the maximum and minimum values of the selected feature. Outliers are expected to have shorter paths in the tree structure, making them easier to isolate\n\n```{python}\n#| tags: []\nimport pandas as pd\nfrom sklearn.ensemble import IsolationForest\nimport matplotlib.pyplot as plt\n\n# If the dataset has multiple columns for different years, use the following lines to reshape it\n# df_melted = df.melt(id_vars=['SomeIDColumn'], var_name='Year', value_name='Rainfall')\n# df_melted = df_melted.dropna()  # Remove any NaN values\n# column_to_use = 'Rainfall'  # This is the column with rainfall data\n\ndf = df.dropna(subset=['ANNUAL'])\n\n# If there's a single column for rainfall, directly use it\ncolumn_to_use = 'ANNUAL'  # Replace with your actual column name\n\n# Creating an instance of Isolation Forest\niso_forest = IsolationForest(n_estimators=100, contamination='auto', random_state=42)\n\n# Fitting the model on the Rainfall column\niso_forest.fit(df[[column_to_use]])\n\n# Predicting outliers\noutliers = iso_forest.predict(df[[column_to_use]])\n\n# Adding a column to the DataFrame to indicate outliers\ndf['outlier'] = outliers\n\n# Plotting the results\nplt.figure(figsize=(10, 6))\nplt.scatter(df['YEAR'], df[column_to_use], c=df['outlier'], cmap='coolwarm')  # Replace 'Year' if needed\nplt.title('Outlier Detection in Annual Rainfall')\nplt.xlabel('Year')\nplt.ylabel('Rainfall')\nplt.show()\n```\n\nThe points marked in blue are outliers according to the Isolation Forest. The blue points help us visualize years with unusual rainfall patterns. This could be due to extreme weather events such as droughts or floods.\n","srcMarkdownNoYaml":"\n\nWe use the Shapiro-Wilk test and Isolation Forest to detect outliers in the rainfall data.\n\n```{python}\n#| tags: []\nimport sys\n\nassert sys.version_info >= (3, 7)\n```\n\n```{python}\n#| tags: []\nfrom packaging import version\nimport sklearn\n\nassert version.parse(sklearn.__version__) >= version.parse(\"1.0.1\")\n```\n\n```{python}\n#| tags: []\nimport pandas as pd\n\ndf = pd.read_csv(\"./coastal_karnataka_rainfall-checkpoint.csv\")\n\ndf.keys()\n```\n\n## Plotting the earthquake data correlating earthquake depth to earthquake magnitude\n\n```{python}\n#| tags: []\nimport matplotlib.pyplot as plt\n\nplt.rc('font', size=14)\nplt.rc('axes', labelsize=14, titlesize=14)\nplt.rc('legend', fontsize=14)\nplt.rc('xtick', labelsize=10)\nplt.rc('ytick', labelsize=10)\nplt.figure(figsize=(10, 4))\n\nX = df['YEAR']\nX.drop(columns=['YEAR'])\ny = df['ANNUAL']\nplt.scatter(X, y, marker='*')\nplt.xlabel(\"$year$\")\nplt.ylabel(\"$rainfall$\", rotation=90)\n#plt.axis([90, 160, 60, 75])\nplt.grid()\nplt.show()\n```\n\n## Detecting Outliers by Normalizing the Data\n\nThe Shapiro-Wilk test can be used to check if data is normally distributed. If the data is normally distributed, we can use the mean and standard deviation to detect outliers.\n\n```{python}\n#| tags: []\nimport scipy\nimport numpy as np\narr = df.ANNUAL.to_numpy()\narr = arr[~np.isnan(arr)]\nscipy.stats.shapiro(arr)\n# small p-value --> data is normal\n```\n\nBecause the p-value is very small, we can deduce that the data is normally distributed. Thus, we can say that outliers lie 3.5 standard deviations above and below the mean of the distribution.\n\n## Plotting the Kernel Denstiy Estimation\n\nThe Kernel Density Estimation of the data helps us visualize the shape of the data in a smooth curve.\n\n```{python}\n#| tags: []\nplt = df.ANNUAL.plot.kde()\nmean = df.ANNUAL.mean()\nstd = df.ANNUAL.std()\n\n# marking outliers\nplt.vlines(x = std*3.5 + mean, ymin = -0.00005, ymax = 0.0008,\n           colors = 'orange',\n           label = 'vline_multiple - full height')\nplt.vlines(x = mean - std*3.5, ymin = -0.00005, ymax = 0.0008,\n           colors = 'orange',\n           label = 'vline_multiple - full height')\n```\n\n## Detecting Outliers using Isolation Forest\n\nThe Isolation Forest algorithm isolates anomalies by randomly selecting a feature and then randomly selecting a split value between the maximum and minimum values of the selected feature. Outliers are expected to have shorter paths in the tree structure, making them easier to isolate\n\n```{python}\n#| tags: []\nimport pandas as pd\nfrom sklearn.ensemble import IsolationForest\nimport matplotlib.pyplot as plt\n\n# If the dataset has multiple columns for different years, use the following lines to reshape it\n# df_melted = df.melt(id_vars=['SomeIDColumn'], var_name='Year', value_name='Rainfall')\n# df_melted = df_melted.dropna()  # Remove any NaN values\n# column_to_use = 'Rainfall'  # This is the column with rainfall data\n\ndf = df.dropna(subset=['ANNUAL'])\n\n# If there's a single column for rainfall, directly use it\ncolumn_to_use = 'ANNUAL'  # Replace with your actual column name\n\n# Creating an instance of Isolation Forest\niso_forest = IsolationForest(n_estimators=100, contamination='auto', random_state=42)\n\n# Fitting the model on the Rainfall column\niso_forest.fit(df[[column_to_use]])\n\n# Predicting outliers\noutliers = iso_forest.predict(df[[column_to_use]])\n\n# Adding a column to the DataFrame to indicate outliers\ndf['outlier'] = outliers\n\n# Plotting the results\nplt.figure(figsize=(10, 6))\nplt.scatter(df['YEAR'], df[column_to_use], c=df['outlier'], cmap='coolwarm')  # Replace 'Year' if needed\nplt.title('Outlier Detection in Annual Rainfall')\nplt.xlabel('Year')\nplt.ylabel('Rainfall')\nplt.show()\n```\n\nThe points marked in blue are outliers according to the Isolation Forest. The blue points help us visualize years with unusual rainfall patterns. This could be due to extreme weather events such as droughts or floods.\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"jupyter"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css"],"output-file":"outlier_detection-checkpoint.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.450","editor":"visual","theme":"cosmo","title-block-banner":true,"title":"Outlier Detection on Annual Rainfall in Coastal Karnataka","jupyter":"python3"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}